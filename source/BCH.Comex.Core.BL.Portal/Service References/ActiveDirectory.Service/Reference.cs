//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BCH.Comex.Core.BL.Portal.ActiveDirectory.Service
{


    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RenewFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PullFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnumerateFault))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
    public partial class FaultDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ArgumentErrorDetail argumentErrorField;
        
        private string errorField;
        
        private DirectoryErrorDetail directoryErrorField;
        
        private string invalidAttributeTypeField;
        
        private string invalidOperationField;
        
        private ChangeType invalidChangeField;
        
        private AttributeTypeAndValue invalidAttributeTypeOrValueField;
        
        private string shortErrorField;
        
        private string unknownAttributeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ArgumentErrorDetail ArgumentError {
            get {
                return this.argumentErrorField;
            }
            set {
                this.argumentErrorField = value;
                this.RaisePropertyChanged("ArgumentError");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("Error");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public DirectoryErrorDetail DirectoryError {
            get {
                return this.directoryErrorField;
            }
            set {
                this.directoryErrorField = value;
                this.RaisePropertyChanged("DirectoryError");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string InvalidAttributeType {
            get {
                return this.invalidAttributeTypeField;
            }
            set {
                this.invalidAttributeTypeField = value;
                this.RaisePropertyChanged("InvalidAttributeType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string InvalidOperation {
            get {
                return this.invalidOperationField;
            }
            set {
                this.invalidOperationField = value;
                this.RaisePropertyChanged("InvalidOperation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public ChangeType InvalidChange {
            get {
                return this.invalidChangeField;
            }
            set {
                this.invalidChangeField = value;
                this.RaisePropertyChanged("InvalidChange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public AttributeTypeAndValue InvalidAttributeTypeOrValue {
            get {
                return this.invalidAttributeTypeOrValueField;
            }
            set {
                this.invalidAttributeTypeOrValueField = value;
                this.RaisePropertyChanged("InvalidAttributeTypeOrValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ShortError {
            get {
                return this.shortErrorField;
            }
            set {
                this.shortErrorField = value;
                this.RaisePropertyChanged("ShortError");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string UnknownAttribute {
            get {
                return this.unknownAttributeField;
            }
            set {
                this.unknownAttributeField = value;
                this.RaisePropertyChanged("UnknownAttribute");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
    public partial class ArgumentErrorDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        private string parameterNameField;
        
        private string shortMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
                this.RaisePropertyChanged("ParameterName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ShortMessage {
            get {
                return this.shortMessageField;
            }
            set {
                this.shortMessageField = value;
                this.RaisePropertyChanged("ShortMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangeType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
    public partial class AttributeTypeAndValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Data.DataSet attributeTypeField;
        
        private System.Data.DataSet attributeValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Data.DataSet AttributeType {
            get {
                return this.attributeTypeField;
            }
            set {
                this.attributeTypeField = value;
                this.RaisePropertyChanged("AttributeType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.Data.DataSet AttributeValue {
            get {
                return this.attributeValueField;
            }
            set {
                this.attributeValueField = value;
                this.RaisePropertyChanged("AttributeValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
    public partial class ChangeType : AttributeTypeAndValue {
        
        private string operationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
                this.RaisePropertyChanged("Operation");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
    public partial class DirectoryErrorDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        private string errorCodeField;
        
        private string extendedErrorMessageField;
        
        private string matchedDNField;
        
        private string[] referralField;
        
        private string win32ErrorCodeField;
        
        private string shortMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ExtendedErrorMessage {
            get {
                return this.extendedErrorMessageField;
            }
            set {
                this.extendedErrorMessageField = value;
                this.RaisePropertyChanged("ExtendedErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MatchedDN {
            get {
                return this.matchedDNField;
            }
            set {
                this.matchedDNField = value;
                this.RaisePropertyChanged("MatchedDN");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Referral", Order=4)]
        public string[] Referral {
            get {
                return this.referralField;
            }
            set {
                this.referralField = value;
                this.RaisePropertyChanged("Referral");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Win32ErrorCode {
            get {
                return this.win32ErrorCodeField;
            }
            set {
                this.win32ErrorCodeField = value;
                this.RaisePropertyChanged("Win32ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ShortMessage {
            get {
                return this.shortMessageField;
            }
            set {
                this.shortMessageField = value;
                this.RaisePropertyChanged("ShortMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
    public partial class RenewFault : FaultDetail {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
    public partial class PullFault : FaultDetail {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
    public partial class EnumerateFault : FaultDetail {
        
        private string invalidPropertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string InvalidProperty {
            get {
                return this.invalidPropertyField;
            }
            set {
                this.invalidPropertyField = value;
                this.RaisePropertyChanged("InvalidProperty");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
    public partial class FragmentDialect : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
    public partial class AttributeTypeNotValid : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AttributeTypeNotValidForDialect attributeTypeNotValidForDialectField;
        
        private AttributeTypeNotValidForEntry attributeTypeNotValidForEntryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AttributeTypeNotValidForDialect AttributeTypeNotValidForDialect {
            get {
                return this.attributeTypeNotValidForDialectField;
            }
            set {
                this.attributeTypeNotValidForDialectField = value;
                this.RaisePropertyChanged("AttributeTypeNotValidForDialect");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public AttributeTypeNotValidForEntry AttributeTypeNotValidForEntry {
            get {
                return this.attributeTypeNotValidForEntryField;
            }
            set {
                this.attributeTypeNotValidForEntryField = value;
                this.RaisePropertyChanged("AttributeTypeNotValidForEntry");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
    public partial class AttributeTypeNotValidForDialect : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string attributeTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AttributeType {
            get {
                return this.attributeTypeField;
            }
            set {
                this.attributeTypeField = value;
                this.RaisePropertyChanged("AttributeType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
    public partial class AttributeTypeNotValidForEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string attributeTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AttributeType {
            get {
                return this.attributeTypeField;
            }
            set {
                this.attributeTypeField = value;
                this.RaisePropertyChanged("AttributeType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="FaultDetail", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
    public partial class FaultDetail1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int sizeLimitField;
        
        private bool sizeLimitFieldSpecified;
        
        private string valueField;
        
        private System.Xml.Serialization.XmlSerializerNamespaces xmlnsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
        public int SizeLimit {
            get {
                return this.sizeLimitField;
            }
            set {
                this.sizeLimitField = value;
                this.RaisePropertyChanged("SizeLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeLimitSpecified {
            get {
                return this.sizeLimitFieldSpecified;
            }
            set {
                this.sizeLimitFieldSpecified = value;
                this.RaisePropertyChanged("SizeLimitSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns {
            get {
                return this.xmlnsField;
            }
            set {
                this.xmlnsField = value;
                this.RaisePropertyChanged("xmlns");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/ws/2004/09/enumeration")]
    public partial class SupportedDialect : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
    public partial class SupportedSelectOrSortDialect : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryPrincipal", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroup))]
    public partial class ActiveDirectoryPrincipal : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryObject {
        
        private byte[] SIDField;
        
        private string SamAccountNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte[] SID {
            get {
                return this.SIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SIDField, value) != true)) {
                    this.SIDField = value;
                    this.RaisePropertyChanged("SID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SamAccountName {
            get {
                return this.SamAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SamAccountNameField, value) != true)) {
                    this.SamAccountNameField = value;
                    this.RaisePropertyChanged("SamAccountName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryObject", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryPartition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDomain))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryPrincipal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroup))]
    public partial class ActiveDirectoryObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DistinguishedNameField;
        
        private string NameField;
        
        private string ObjectClassField;
        
        private System.Guid ObjectGuidField;
        
        private string[] ObjectTypesField;
        
        private string ReferenceServerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DistinguishedName {
            get {
                return this.DistinguishedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistinguishedNameField, value) != true)) {
                    this.DistinguishedNameField = value;
                    this.RaisePropertyChanged("DistinguishedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ObjectClass {
            get {
                return this.ObjectClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectClassField, value) != true)) {
                    this.ObjectClassField = value;
                    this.RaisePropertyChanged("ObjectClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid ObjectGuid {
            get {
                return this.ObjectGuidField;
            }
            set {
                if ((this.ObjectGuidField.Equals(value) != true)) {
                    this.ObjectGuidField = value;
                    this.RaisePropertyChanged("ObjectGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] ObjectTypes {
            get {
                return this.ObjectTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypesField, value) != true)) {
                    this.ObjectTypesField = value;
                    this.RaisePropertyChanged("ObjectTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ReferenceServer {
            get {
                return this.ReferenceServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceServerField, value) != true)) {
                    this.ReferenceServerField = value;
                    this.RaisePropertyChanged("ReferenceServer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryPartition", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDomain))]
    public partial class ActiveDirectoryPartition : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryObject {
        
        private string DNSRootField;
        
        private string DeletedObjectsContainerField;
        
        private string LostAndFoundContainerField;
        
        private string QuotasContainerField;
        
        private string[] ReadOnlyReplicaDirectoryServerField;
        
        private string[] ReplicaDirectoryServerField;
        
        private string[] SubordinateReferencesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DNSRoot {
            get {
                return this.DNSRootField;
            }
            set {
                if ((object.ReferenceEquals(this.DNSRootField, value) != true)) {
                    this.DNSRootField = value;
                    this.RaisePropertyChanged("DNSRoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DeletedObjectsContainer {
            get {
                return this.DeletedObjectsContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedObjectsContainerField, value) != true)) {
                    this.DeletedObjectsContainerField = value;
                    this.RaisePropertyChanged("DeletedObjectsContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LostAndFoundContainer {
            get {
                return this.LostAndFoundContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.LostAndFoundContainerField, value) != true)) {
                    this.LostAndFoundContainerField = value;
                    this.RaisePropertyChanged("LostAndFoundContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string QuotasContainer {
            get {
                return this.QuotasContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.QuotasContainerField, value) != true)) {
                    this.QuotasContainerField = value;
                    this.RaisePropertyChanged("QuotasContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] ReadOnlyReplicaDirectoryServer {
            get {
                return this.ReadOnlyReplicaDirectoryServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadOnlyReplicaDirectoryServerField, value) != true)) {
                    this.ReadOnlyReplicaDirectoryServerField = value;
                    this.RaisePropertyChanged("ReadOnlyReplicaDirectoryServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] ReplicaDirectoryServer {
            get {
                return this.ReplicaDirectoryServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplicaDirectoryServerField, value) != true)) {
                    this.ReplicaDirectoryServerField = value;
                    this.RaisePropertyChanged("ReplicaDirectoryServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] SubordinateReferences {
            get {
                return this.SubordinateReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubordinateReferencesField, value) != true)) {
                    this.SubordinateReferencesField = value;
                    this.RaisePropertyChanged("SubordinateReferences");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryDomain", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class ActiveDirectoryDomain : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryPartition {
        
        private string[] AllowedDNSSuffixesField;
        
        private string[] AppliedGroupPoliciesField;
        
        private string[] ChildDomainsField;
        
        private string ComputersContainerField;
        
        private string DomainControllersContainerField;
        
        private int DomainModeField;
        
        private byte[] DomainSIDField;
        
        private string ForeignSecurityPrincipalsContainerField;
        
        private string ForestField;
        
        private string InfrastructureMasterField;
        
        private System.Nullable<System.TimeSpan> LastLogonReplicationIntervalField;
        
        private string ManagedByField;
        
        private string NetBIOSNameField;
        
        private string PDCEmulatorField;
        
        private string ParentDomainField;
        
        private string RIDMasterField;
        
        private string SystemsContainerField;
        
        private string UsersContainerField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] AllowedDNSSuffixes {
            get {
                return this.AllowedDNSSuffixesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllowedDNSSuffixesField, value) != true)) {
                    this.AllowedDNSSuffixesField = value;
                    this.RaisePropertyChanged("AllowedDNSSuffixes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] AppliedGroupPolicies {
            get {
                return this.AppliedGroupPoliciesField;
            }
            set {
                if ((object.ReferenceEquals(this.AppliedGroupPoliciesField, value) != true)) {
                    this.AppliedGroupPoliciesField = value;
                    this.RaisePropertyChanged("AppliedGroupPolicies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] ChildDomains {
            get {
                return this.ChildDomainsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildDomainsField, value) != true)) {
                    this.ChildDomainsField = value;
                    this.RaisePropertyChanged("ChildDomains");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ComputersContainer {
            get {
                return this.ComputersContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputersContainerField, value) != true)) {
                    this.ComputersContainerField = value;
                    this.RaisePropertyChanged("ComputersContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DomainControllersContainer {
            get {
                return this.DomainControllersContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainControllersContainerField, value) != true)) {
                    this.DomainControllersContainerField = value;
                    this.RaisePropertyChanged("DomainControllersContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int DomainMode {
            get {
                return this.DomainModeField;
            }
            set {
                if ((this.DomainModeField.Equals(value) != true)) {
                    this.DomainModeField = value;
                    this.RaisePropertyChanged("DomainMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte[] DomainSID {
            get {
                return this.DomainSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainSIDField, value) != true)) {
                    this.DomainSIDField = value;
                    this.RaisePropertyChanged("DomainSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ForeignSecurityPrincipalsContainer {
            get {
                return this.ForeignSecurityPrincipalsContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.ForeignSecurityPrincipalsContainerField, value) != true)) {
                    this.ForeignSecurityPrincipalsContainerField = value;
                    this.RaisePropertyChanged("ForeignSecurityPrincipalsContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Forest {
            get {
                return this.ForestField;
            }
            set {
                if ((object.ReferenceEquals(this.ForestField, value) != true)) {
                    this.ForestField = value;
                    this.RaisePropertyChanged("Forest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string InfrastructureMaster {
            get {
                return this.InfrastructureMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.InfrastructureMasterField, value) != true)) {
                    this.InfrastructureMasterField = value;
                    this.RaisePropertyChanged("InfrastructureMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.TimeSpan> LastLogonReplicationInterval {
            get {
                return this.LastLogonReplicationIntervalField;
            }
            set {
                if ((this.LastLogonReplicationIntervalField.Equals(value) != true)) {
                    this.LastLogonReplicationIntervalField = value;
                    this.RaisePropertyChanged("LastLogonReplicationInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ManagedBy {
            get {
                return this.ManagedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagedByField, value) != true)) {
                    this.ManagedByField = value;
                    this.RaisePropertyChanged("ManagedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string NetBIOSName {
            get {
                return this.NetBIOSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NetBIOSNameField, value) != true)) {
                    this.NetBIOSNameField = value;
                    this.RaisePropertyChanged("NetBIOSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PDCEmulator {
            get {
                return this.PDCEmulatorField;
            }
            set {
                if ((object.ReferenceEquals(this.PDCEmulatorField, value) != true)) {
                    this.PDCEmulatorField = value;
                    this.RaisePropertyChanged("PDCEmulator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ParentDomain {
            get {
                return this.ParentDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentDomainField, value) != true)) {
                    this.ParentDomainField = value;
                    this.RaisePropertyChanged("ParentDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string RIDMaster {
            get {
                return this.RIDMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.RIDMasterField, value) != true)) {
                    this.RIDMasterField = value;
                    this.RaisePropertyChanged("RIDMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SystemsContainer {
            get {
                return this.SystemsContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemsContainerField, value) != true)) {
                    this.SystemsContainerField = value;
                    this.RaisePropertyChanged("SystemsContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string UsersContainer {
            get {
                return this.UsersContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersContainerField, value) != true)) {
                    this.UsersContainerField = value;
                    this.RaisePropertyChanged("UsersContainer");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryGroup", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class ActiveDirectoryGroup : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryPrincipal {
        
        private BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroupScope GroupScopeField;
        
        private BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroupType GroupTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroupScope GroupScope {
            get {
                return this.GroupScopeField;
            }
            set {
                if ((this.GroupScopeField.Equals(value) != true)) {
                    this.GroupScopeField = value;
                    this.RaisePropertyChanged("GroupScope");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroupType GroupType {
            get {
                return this.GroupTypeField;
            }
            set {
                if ((this.GroupTypeField.Equals(value) != true)) {
                    this.GroupTypeField = value;
                    this.RaisePropertyChanged("GroupType");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryGroupScope", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    public enum ActiveDirectoryGroupScope : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DomainLocal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Global = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Universal = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryGroupType", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    public enum ActiveDirectoryGroupType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Distribution = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Security = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomActionFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberFault))]
    public partial class CustomActionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ArgumentErrorDetailCA ArgumentErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.DirectoryErrorDetailCA DirectoryErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ArgumentErrorDetailCA ArgumentError {
            get {
                return this.ArgumentErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ArgumentErrorField, value) != true)) {
                    this.ArgumentErrorField = value;
                    this.RaisePropertyChanged("ArgumentError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.DirectoryErrorDetailCA DirectoryError {
            get {
                return this.DirectoryErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoryErrorField, value) != true)) {
                    this.DirectoryErrorField = value;
                    this.RaisePropertyChanged("DirectoryError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortError {
            get {
                return this.ShortErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortErrorField, value) != true)) {
                    this.ShortErrorField = value;
                    this.RaisePropertyChanged("ShortError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArgumentErrorDetailCA", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class ArgumentErrorDetailCA : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParameterName {
            get {
                return this.ParameterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterNameField, value) != true)) {
                    this.ParameterNameField = value;
                    this.RaisePropertyChanged("ParameterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortMessage {
            get {
                return this.ShortMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortMessageField, value) != true)) {
                    this.ShortMessageField = value;
                    this.RaisePropertyChanged("ShortMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectoryErrorDetailCA", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class DirectoryErrorDetailCA : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtendedErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchedDNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ReferralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Win32ErrorCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtendedErrorMessage {
            get {
                return this.ExtendedErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedErrorMessageField, value) != true)) {
                    this.ExtendedErrorMessageField = value;
                    this.RaisePropertyChanged("ExtendedErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchedDN {
            get {
                return this.MatchedDNField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchedDNField, value) != true)) {
                    this.MatchedDNField = value;
                    this.RaisePropertyChanged("MatchedDN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Referral {
            get {
                return this.ReferralField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferralField, value) != true)) {
                    this.ReferralField = value;
                    this.RaisePropertyChanged("Referral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortMessage {
            get {
                return this.ShortMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortMessageField, value) != true)) {
                    this.ShortMessageField = value;
                    this.RaisePropertyChanged("ShortMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Win32ErrorCode {
            get {
                return this.Win32ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Win32ErrorCodeField, value) != true)) {
                    this.Win32ErrorCodeField = value;
                    this.RaisePropertyChanged("Win32ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeOptionalFeatureFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class ChangeOptionalFeatureFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetADForestFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class GetADForestFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoveADOperationMasterRoleFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class MoveADOperationMasterRoleFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetADPrincipalGroupMembershipFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class GetADPrincipalGroupMembershipFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetPasswordFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class SetPasswordFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangePasswordFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class ChangePasswordFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetADPrincipalAuthorizationGroupFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class GetADPrincipalAuthorizationGroupFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetADDomainFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class GetADDomainFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetADDomainControllerFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class GetADDomainControllerFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslateNameFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class TranslateNameFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVersionFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class GetVersionFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetADGroupMemberFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class GetADGroupMemberFault : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.CustomActionFault {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryNameFormat", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    public enum ActiveDirectoryNameFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DistinguishedName = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanonicalName = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryNameTranslateResult", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class ActiveDirectoryNameTranslateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NameField;
        
        private uint ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryDomainController", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class ActiveDirectoryDomainController : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDirectoryServer {
        
        private string ComputerDNField;
        
        private string DomainField;
        
        private bool EnabledField;
        
        private string ForestField;
        
        private bool IsGlobalCatalogField;
        
        private bool IsReadOnlyField;
        
        private string OSHotFixField;
        
        private string OSNameField;
        
        private string OSServicepackField;
        
        private string OSVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ComputerDN {
            get {
                return this.ComputerDNField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerDNField, value) != true)) {
                    this.ComputerDNField = value;
                    this.RaisePropertyChanged("ComputerDN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Forest {
            get {
                return this.ForestField;
            }
            set {
                if ((object.ReferenceEquals(this.ForestField, value) != true)) {
                    this.ForestField = value;
                    this.RaisePropertyChanged("Forest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsGlobalCatalog {
            get {
                return this.IsGlobalCatalogField;
            }
            set {
                if ((this.IsGlobalCatalogField.Equals(value) != true)) {
                    this.IsGlobalCatalogField = value;
                    this.RaisePropertyChanged("IsGlobalCatalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OSHotFix {
            get {
                return this.OSHotFixField;
            }
            set {
                if ((object.ReferenceEquals(this.OSHotFixField, value) != true)) {
                    this.OSHotFixField = value;
                    this.RaisePropertyChanged("OSHotFix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OSName {
            get {
                return this.OSNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OSNameField, value) != true)) {
                    this.OSNameField = value;
                    this.RaisePropertyChanged("OSName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OSServicepack {
            get {
                return this.OSServicepackField;
            }
            set {
                if ((object.ReferenceEquals(this.OSServicepackField, value) != true)) {
                    this.OSServicepackField = value;
                    this.RaisePropertyChanged("OSServicepack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OSVersion {
            get {
                return this.OSVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.OSVersionField, value) != true)) {
                    this.OSVersionField = value;
                    this.RaisePropertyChanged("OSVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryDirectoryServer", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDomainController))]
    public partial class ActiveDirectoryDirectoryServer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DefaultPartitionField;
        
        private string HostNameField;
        
        private System.Guid InvocationIdField;
        
        private int LdapPortField;
        
        private string NTDSSettingsObjectDNField;
        
        private string NameField;
        
        private BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryOperationMasterRole[] OperationMasterRoleField;
        
        private string[] PartitionsField;
        
        private string ServerObjectDNField;
        
        private System.Guid ServerObjectGuidField;
        
        private string SiteField;
        
        private int SslPortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DefaultPartition {
            get {
                return this.DefaultPartitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultPartitionField, value) != true)) {
                    this.DefaultPartitionField = value;
                    this.RaisePropertyChanged("DefaultPartition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid InvocationId {
            get {
                return this.InvocationIdField;
            }
            set {
                if ((this.InvocationIdField.Equals(value) != true)) {
                    this.InvocationIdField = value;
                    this.RaisePropertyChanged("InvocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int LdapPort {
            get {
                return this.LdapPortField;
            }
            set {
                if ((this.LdapPortField.Equals(value) != true)) {
                    this.LdapPortField = value;
                    this.RaisePropertyChanged("LdapPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string NTDSSettingsObjectDN {
            get {
                return this.NTDSSettingsObjectDNField;
            }
            set {
                if ((object.ReferenceEquals(this.NTDSSettingsObjectDNField, value) != true)) {
                    this.NTDSSettingsObjectDNField = value;
                    this.RaisePropertyChanged("NTDSSettingsObjectDN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryOperationMasterRole[] OperationMasterRole {
            get {
                return this.OperationMasterRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationMasterRoleField, value) != true)) {
                    this.OperationMasterRoleField = value;
                    this.RaisePropertyChanged("OperationMasterRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] Partitions {
            get {
                return this.PartitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionsField, value) != true)) {
                    this.PartitionsField = value;
                    this.RaisePropertyChanged("Partitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ServerObjectDN {
            get {
                return this.ServerObjectDNField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerObjectDNField, value) != true)) {
                    this.ServerObjectDNField = value;
                    this.RaisePropertyChanged("ServerObjectDN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid ServerObjectGuid {
            get {
                return this.ServerObjectGuidField;
            }
            set {
                if ((this.ServerObjectGuidField.Equals(value) != true)) {
                    this.ServerObjectGuidField = value;
                    this.RaisePropertyChanged("ServerObjectGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int SslPort {
            get {
                return this.SslPortField;
            }
            set {
                if ((this.SslPortField.Equals(value) != true)) {
                    this.SslPortField = value;
                    this.RaisePropertyChanged("SslPort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryOperationMasterRole", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    public enum ActiveDirectoryOperationMasterRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDCEmulator = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RIDMaster = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InfrastructureMaster = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SchemaMaster = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DomainNamingMaster = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryForest", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
    [System.SerializableAttribute()]
    public partial class ActiveDirectoryForest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string[] ApplicationPartitionsField;
        
        private string[] CrossForestReferencesField;
        
        private string DomainNamingMasterField;
        
        private string[] DomainsField;
        
        private int ForestModeField;
        
        private string[] GlobalCatalogsField;
        
        private string NameField;
        
        private string RootDomainField;
        
        private string[] SPNSuffixesField;
        
        private string SchemaMasterField;
        
        private string[] SitesField;
        
        private string[] UPNSuffixesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] ApplicationPartitions {
            get {
                return this.ApplicationPartitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationPartitionsField, value) != true)) {
                    this.ApplicationPartitionsField = value;
                    this.RaisePropertyChanged("ApplicationPartitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] CrossForestReferences {
            get {
                return this.CrossForestReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.CrossForestReferencesField, value) != true)) {
                    this.CrossForestReferencesField = value;
                    this.RaisePropertyChanged("CrossForestReferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DomainNamingMaster {
            get {
                return this.DomainNamingMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainNamingMasterField, value) != true)) {
                    this.DomainNamingMasterField = value;
                    this.RaisePropertyChanged("DomainNamingMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] Domains {
            get {
                return this.DomainsField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainsField, value) != true)) {
                    this.DomainsField = value;
                    this.RaisePropertyChanged("Domains");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ForestMode {
            get {
                return this.ForestModeField;
            }
            set {
                if ((this.ForestModeField.Equals(value) != true)) {
                    this.ForestModeField = value;
                    this.RaisePropertyChanged("ForestMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] GlobalCatalogs {
            get {
                return this.GlobalCatalogsField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalCatalogsField, value) != true)) {
                    this.GlobalCatalogsField = value;
                    this.RaisePropertyChanged("GlobalCatalogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string RootDomain {
            get {
                return this.RootDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.RootDomainField, value) != true)) {
                    this.RootDomainField = value;
                    this.RaisePropertyChanged("RootDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] SPNSuffixes {
            get {
                return this.SPNSuffixesField;
            }
            set {
                if ((object.ReferenceEquals(this.SPNSuffixesField, value) != true)) {
                    this.SPNSuffixesField = value;
                    this.RaisePropertyChanged("SPNSuffixes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SchemaMaster {
            get {
                return this.SchemaMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemaMasterField, value) != true)) {
                    this.SchemaMasterField = value;
                    this.RaisePropertyChanged("SchemaMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] Sites {
            get {
                return this.SitesField;
            }
            set {
                if ((object.ReferenceEquals(this.SitesField, value) != true)) {
                    this.SitesField = value;
                    this.RaisePropertyChanged("Sites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] UPNSuffixes {
            get {
                return this.UPNSuffixesField;
            }
            set {
                if ((object.ReferenceEquals(this.UPNSuffixesField, value) != true)) {
                    this.UPNSuffixesField = value;
                    this.RaisePropertyChanged("UPNSuffixes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.xmlsoap.org/ws/2004/09/transfer", ConfigurationName="ActiveDirectory.Service.Resource", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface Resource {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="EndpointUnavailable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FragmentDialect), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="FragmentDialectNotSupported", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="AccessDenied", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="SchemaValidationError", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess/fault", Name="UnwillingToPerform", Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AttributeTypeNotValid), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="CannotProcessFilter", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="DestinationUnreachable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail1), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="EncodingLimit", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.ServiceModel.Channels.Message Get(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> GetAsync(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Put", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/PutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="DestinationUnreachable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FragmentDialect), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="FragmentDialectNotSupported", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AttributeTypeNotValid), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="CannotProcessFilter", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess/fault", Name="UnwillingToPerform", Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail1), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="EncodingLimit", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="EndpointUnavailable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/fault", Name="InvalidRepresentation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="SchemaValidationError", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="ActionNotSupportedFault", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="AccessDenied", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.ServiceModel.Channels.Message Put(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Put", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/PutResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> PutAsync(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Delete", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="DestinationUnreachable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess/fault", Name="UnwillingToPerform", Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="SchemaValidationError", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="AccessDenied", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="EndpointUnavailable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.ServiceModel.Channels.Message Delete(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Delete", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/DeleteResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> DeleteAsync(System.ServiceModel.Channels.Message request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ResourceChannel : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.Resource, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResourceClient : System.ServiceModel.ClientBase<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.Resource>, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.Resource {
        
        public ResourceClient() {
        }
        
        public ResourceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ResourceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResourceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResourceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.ServiceModel.Channels.Message Get(System.ServiceModel.Channels.Message request) {
            return base.Channel.Get(request);
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> GetAsync(System.ServiceModel.Channels.Message request) {
            return base.Channel.GetAsync(request);
        }
        
        public System.ServiceModel.Channels.Message Put(System.ServiceModel.Channels.Message request) {
            return base.Channel.Put(request);
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> PutAsync(System.ServiceModel.Channels.Message request) {
            return base.Channel.PutAsync(request);
        }
        
        public System.ServiceModel.Channels.Message Delete(System.ServiceModel.Channels.Message request) {
            return base.Channel.Delete(request);
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> DeleteAsync(System.ServiceModel.Channels.Message request) {
            return base.Channel.DeleteAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.xmlsoap.org/ws/2004/09/transfer", ConfigurationName="ActiveDirectory.Service.ResourceFactory", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ResourceFactory {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Create", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/CreateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="AccessDenied", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess/fault", Name="UnwillingToPerform", Namespace="http://schemas.microsoft.com/2006/11/IdentityManagement/DirectoryAccess")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="DestinationUnreachable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail1), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="EncodingLimit", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FragmentDialect), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="FragmentDialectNotSupported", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/fault", Name="InvalidRepresentation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AttributeTypeNotValid), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="CannotProcessFilter", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="EndpointUnavailable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="ActionNotSupportedFault", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="SchemaValidationError", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.dmtf.org/wbem/wsman/1/wsman/fault", Name="AlreadyExists", Namespace="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.ServiceModel.Channels.Message Create(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Create", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/CreateResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> CreateAsync(System.ServiceModel.Channels.Message request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ResourceFactoryChannel : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ResourceFactory, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResourceFactoryClient : System.ServiceModel.ClientBase<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ResourceFactory>, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ResourceFactory {
        
        public ResourceFactoryClient() {
        }
        
        public ResourceFactoryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ResourceFactoryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResourceFactoryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResourceFactoryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.ServiceModel.Channels.Message Create(System.ServiceModel.Channels.Message request) {
            return base.Channel.Create(request);
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> CreateAsync(System.ServiceModel.Channels.Message request) {
            return base.Channel.CreateAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.xmlsoap.org/ws/2004/09/enumeration", ConfigurationName="ActiveDirectory.Service.Search", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface Search {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Enumerate", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/EnumerateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.EnumerateFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="InvalidPropertyFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.EnumerateFault), Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/fault", Name="CannotProcessFilter")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.EnumerateFault), Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/fault", Name="InvalidExpirationTime")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="EndpointUnavailable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SupportedDialect), Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/fault", Name="FilterDialectRequestedUnavailable")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.EnumerateFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="EnumerationContextLimitExceeded", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SupportedSelectOrSortDialect), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="UnsupportedSelectOrSortDialectFault", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.EnumerateFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="InvalidSortKey", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="DestinationUnreachable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.ServiceModel.Channels.Message Enumerate(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Enumerate", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/EnumerateResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> EnumerateAsync(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Pull", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/PullResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="EndpointUnavailable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="DestinationUnreachable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/fault", Name="InvalidEnumerationContext")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.PullFault), Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/fault", Name="TimedOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.PullFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="MaxTimeExceedsLimit", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.PullFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="MaxCharsNotSupported", Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.ServiceModel.Channels.Message Pull(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Pull", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/PullResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> PullAsync(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Renew", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/RenewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.RenewFault), Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/fault", Name="UnableToRenew")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/fault", Name="InvalidEnumerationContext")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="EndpointUnavailable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.ServiceModel.Channels.Message Renew(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Renew", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/RenewResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> RenewAsync(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/GetStatus", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/GetStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="EndpointUnavailable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/fault", Name="InvalidEnumerationContext")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.ServiceModel.Channels.Message GetStatus(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/GetStatus", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/GetStatusResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> GetStatusAsync(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Release", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/ReleaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.FaultDetail), Action="http://schemas.xmlsoap.org/ws/2004/08/addressing/fault", Name="EndpointUnavailable", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.ServiceModel.Channels.Message Release(System.ServiceModel.Channels.Message request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.xmlsoap.org/ws/2004/09/enumeration/Release", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/enumeration/ReleaseResponse")]
        System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> ReleaseAsync(System.ServiceModel.Channels.Message request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SearchChannel : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.Search, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchClient : System.ServiceModel.ClientBase<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.Search>, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.Search {
        
        public SearchClient() {
        }
        
        public SearchClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SearchClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.ServiceModel.Channels.Message Enumerate(System.ServiceModel.Channels.Message request) {
            return base.Channel.Enumerate(request);
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> EnumerateAsync(System.ServiceModel.Channels.Message request) {
            return base.Channel.EnumerateAsync(request);
        }
        
        public System.ServiceModel.Channels.Message Pull(System.ServiceModel.Channels.Message request) {
            return base.Channel.Pull(request);
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> PullAsync(System.ServiceModel.Channels.Message request) {
            return base.Channel.PullAsync(request);
        }
        
        public System.ServiceModel.Channels.Message Renew(System.ServiceModel.Channels.Message request) {
            return base.Channel.Renew(request);
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> RenewAsync(System.ServiceModel.Channels.Message request) {
            return base.Channel.RenewAsync(request);
        }
        
        public System.ServiceModel.Channels.Message GetStatus(System.ServiceModel.Channels.Message request) {
            return base.Channel.GetStatus(request);
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> GetStatusAsync(System.ServiceModel.Channels.Message request) {
            return base.Channel.GetStatusAsync(request);
        }
        
        public System.ServiceModel.Channels.Message Release(System.ServiceModel.Channels.Message request) {
            return base.Channel.Release(request);
        }
        
        public System.Threading.Tasks.Task<System.ServiceModel.Channels.Message> ReleaseAsync(System.ServiceModel.Channels.Message request) {
            return base.Channel.ReleaseAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", ConfigurationName="ActiveDirectory.Service.AccountManagement", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface AccountManagement {
        
        // CODEGEN: Generating message contract since the wrapper name (GetADGroupMemberRequest) of message GetADGroupMemberRequest does not match the default value (GetADGroupMember)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADGroupMember", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADGroupMemberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="GetADGroupMemberFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberResponse GetADGroupMember(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADGroupMember", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADGroupMemberResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberResponse> GetADGroupMemberAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetADPrincipalGroupMembershipRequest) of message GetADPrincipalGroupMembershipRequest does not match the default value (GetADPrincipalGroupMembership)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADPrincipalGroupMembership", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADPrincipalGroupMembershipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="GetADPrincipalGroupMembershipFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipResponse GetADPrincipalGroupMembership(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADPrincipalGroupMembership", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADPrincipalGroupMembershipResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipResponse> GetADPrincipalGroupMembershipAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (SetPasswordRequest) of message SetPasswordRequest does not match the default value (SetPassword)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/SetPassword", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/SetPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="SetPasswordFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordResponse SetPassword(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/SetPassword", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/SetPasswordResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordResponse> SetPasswordAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (ChangePasswordRequest) of message ChangePasswordRequest does not match the default value (ChangePassword)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/ChangePassword", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/ChangePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="ChangePasswordFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordResponse ChangePassword(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/ChangePassword", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/ChangePasswordResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordResponse> ChangePasswordAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetADPrincipalAuthorizationGroupRequest) of message GetADPrincipalAuthorizationGroupRequest does not match the default value (GetADPrincipalAuthorizationGroup)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADPrincipalAuthorizationGroup", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADPrincipalAuthorizationGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="GetADPrincipalAuthorizationGroupFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupResponse GetADPrincipalAuthorizationGroup(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADPrincipalAuthorizationGroup", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/GetADPrincipalAuthorizationGroupResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupResponse> GetADPrincipalAuthorizationGroupAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (TranslateNameRequest) of message TranslateNameRequest does not match the default value (TranslateName)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/TranslateName", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/TranslateNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="TranslateNameFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameResponse TranslateName(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/TranslateName", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/AccountManageme" +
            "nt/TranslateNameResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameResponse> TranslateNameAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADGroupMemberRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADGroupMemberRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public string GroupDN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=1)]
        public string PartitionDN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=2)]
        public bool Recursive;
        
        public GetADGroupMemberRequest() {
        }
        
        public GetADGroupMemberRequest(string Server, string GroupDN, string PartitionDN, bool Recursive) {
            this.Server = Server;
            this.GroupDN = GroupDN;
            this.PartitionDN = PartitionDN;
            this.Recursive = Recursive;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADGroupMemberResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADGroupMemberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryPrincipal[] Members;
        
        public GetADGroupMemberResponse() {
        }
        
        public GetADGroupMemberResponse(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryPrincipal[] Members) {
            this.Members = Members;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADPrincipalGroupMembershipRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADPrincipalGroupMembershipRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public string PartitionDN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=1)]
        public string PrincipalDN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=2)]
        public string ResourceContextPartition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=3)]
        public string ResourceContextServer;
        
        public GetADPrincipalGroupMembershipRequest() {
        }
        
        public GetADPrincipalGroupMembershipRequest(string Server, string PartitionDN, string PrincipalDN, string ResourceContextPartition, string ResourceContextServer) {
            this.Server = Server;
            this.PartitionDN = PartitionDN;
            this.PrincipalDN = PrincipalDN;
            this.ResourceContextPartition = ResourceContextPartition;
            this.ResourceContextServer = ResourceContextServer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADPrincipalGroupMembershipResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADPrincipalGroupMembershipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroup[] MemberOf;
        
        public GetADPrincipalGroupMembershipResponse() {
        }
        
        public GetADPrincipalGroupMembershipResponse(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroup[] MemberOf) {
            this.MemberOf = MemberOf;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPasswordRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class SetPasswordRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public string AccountDN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=1)]
        public string NewPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=2)]
        public string PartitionDN;
        
        public SetPasswordRequest() {
        }
        
        public SetPasswordRequest(string Server, string AccountDN, string NewPassword, string PartitionDN) {
            this.Server = Server;
            this.AccountDN = AccountDN;
            this.NewPassword = NewPassword;
            this.PartitionDN = PartitionDN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPasswordResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class SetPasswordResponse {
        
        public SetPasswordResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePasswordRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class ChangePasswordRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public string AccountDN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=1)]
        public string NewPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=2)]
        public string OldPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=3)]
        public string PartitionDN;
        
        public ChangePasswordRequest() {
        }
        
        public ChangePasswordRequest(string Server, string AccountDN, string NewPassword, string OldPassword, string PartitionDN) {
            this.Server = Server;
            this.AccountDN = AccountDN;
            this.NewPassword = NewPassword;
            this.OldPassword = OldPassword;
            this.PartitionDN = PartitionDN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePasswordResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class ChangePasswordResponse {
        
        public ChangePasswordResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADPrincipalAuthorizationGroupRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADPrincipalAuthorizationGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public string PartitionDN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=1)]
        public string PrincipalDN;
        
        public GetADPrincipalAuthorizationGroupRequest() {
        }
        
        public GetADPrincipalAuthorizationGroupRequest(string Server, string PartitionDN, string PrincipalDN) {
            this.Server = Server;
            this.PartitionDN = PartitionDN;
            this.PrincipalDN = PrincipalDN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADPrincipalAuthorizationGroupResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADPrincipalAuthorizationGroupResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroup[] MemberOf;
        
        public GetADPrincipalAuthorizationGroupResponse() {
        }
        
        public GetADPrincipalAuthorizationGroupResponse(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroup[] MemberOf) {
            this.MemberOf = MemberOf;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TranslateNameRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class TranslateNameRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameFormat FormatDesired;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=1)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameFormat FormatOffered;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=2)]
        public string[] Names;
        
        public TranslateNameRequest() {
        }
        
        public TranslateNameRequest(string Server, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameFormat FormatDesired, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameFormat FormatOffered, string[] Names) {
            this.Server = Server;
            this.FormatDesired = FormatDesired;
            this.FormatOffered = FormatOffered;
            this.Names = Names;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TranslateNameResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class TranslateNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameTranslateResult[] NameTranslateResult;
        
        public TranslateNameResponse() {
        }
        
        public TranslateNameResponse(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameTranslateResult[] NameTranslateResult) {
            this.NameTranslateResult = NameTranslateResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AccountManagementChannel : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountManagementClient : System.ServiceModel.ClientBase<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement>, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement {
        
        public AccountManagementClient() {
        }
        
        public AccountManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.GetADGroupMember(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberRequest request) {
            return base.Channel.GetADGroupMember(request);
        }
        
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryPrincipal[] GetADGroupMember(string Server, string GroupDN, string PartitionDN, bool Recursive) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberRequest();
            inValue.Server = Server;
            inValue.GroupDN = GroupDN;
            inValue.PartitionDN = PartitionDN;
            inValue.Recursive = Recursive;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).GetADGroupMember(inValue);
            return retVal.Members;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.GetADGroupMemberAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberRequest request) {
            return base.Channel.GetADGroupMemberAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberResponse> GetADGroupMemberAsync(string Server, string GroupDN, string PartitionDN, bool Recursive) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADGroupMemberRequest();
            inValue.Server = Server;
            inValue.GroupDN = GroupDN;
            inValue.PartitionDN = PartitionDN;
            inValue.Recursive = Recursive;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).GetADGroupMemberAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.GetADPrincipalGroupMembership(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipRequest request) {
            return base.Channel.GetADPrincipalGroupMembership(request);
        }
        
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroup[] GetADPrincipalGroupMembership(string Server, string PartitionDN, string PrincipalDN, string ResourceContextPartition, string ResourceContextServer) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipRequest();
            inValue.Server = Server;
            inValue.PartitionDN = PartitionDN;
            inValue.PrincipalDN = PrincipalDN;
            inValue.ResourceContextPartition = ResourceContextPartition;
            inValue.ResourceContextServer = ResourceContextServer;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).GetADPrincipalGroupMembership(inValue);
            return retVal.MemberOf;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.GetADPrincipalGroupMembershipAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipRequest request) {
            return base.Channel.GetADPrincipalGroupMembershipAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipResponse> GetADPrincipalGroupMembershipAsync(string Server, string PartitionDN, string PrincipalDN, string ResourceContextPartition, string ResourceContextServer) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalGroupMembershipRequest();
            inValue.Server = Server;
            inValue.PartitionDN = PartitionDN;
            inValue.PrincipalDN = PrincipalDN;
            inValue.ResourceContextPartition = ResourceContextPartition;
            inValue.ResourceContextServer = ResourceContextServer;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).GetADPrincipalGroupMembershipAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.SetPassword(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordRequest request) {
            return base.Channel.SetPassword(request);
        }
        
        public void SetPassword(string Server, string AccountDN, string NewPassword, string PartitionDN) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordRequest();
            inValue.Server = Server;
            inValue.AccountDN = AccountDN;
            inValue.NewPassword = NewPassword;
            inValue.PartitionDN = PartitionDN;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).SetPassword(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.SetPasswordAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordRequest request) {
            return base.Channel.SetPasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordResponse> SetPasswordAsync(string Server, string AccountDN, string NewPassword, string PartitionDN) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.SetPasswordRequest();
            inValue.Server = Server;
            inValue.AccountDN = AccountDN;
            inValue.NewPassword = NewPassword;
            inValue.PartitionDN = PartitionDN;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).SetPasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.ChangePassword(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordRequest request) {
            return base.Channel.ChangePassword(request);
        }
        
        public void ChangePassword(string Server, string AccountDN, string NewPassword, string OldPassword, string PartitionDN) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordRequest();
            inValue.Server = Server;
            inValue.AccountDN = AccountDN;
            inValue.NewPassword = NewPassword;
            inValue.OldPassword = OldPassword;
            inValue.PartitionDN = PartitionDN;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).ChangePassword(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.ChangePasswordAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordRequest request) {
            return base.Channel.ChangePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordResponse> ChangePasswordAsync(string Server, string AccountDN, string NewPassword, string OldPassword, string PartitionDN) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangePasswordRequest();
            inValue.Server = Server;
            inValue.AccountDN = AccountDN;
            inValue.NewPassword = NewPassword;
            inValue.OldPassword = OldPassword;
            inValue.PartitionDN = PartitionDN;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).ChangePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.GetADPrincipalAuthorizationGroup(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupRequest request) {
            return base.Channel.GetADPrincipalAuthorizationGroup(request);
        }
        
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryGroup[] GetADPrincipalAuthorizationGroup(string Server, string PartitionDN, string PrincipalDN) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupRequest();
            inValue.Server = Server;
            inValue.PartitionDN = PartitionDN;
            inValue.PrincipalDN = PrincipalDN;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).GetADPrincipalAuthorizationGroup(inValue);
            return retVal.MemberOf;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.GetADPrincipalAuthorizationGroupAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupRequest request) {
            return base.Channel.GetADPrincipalAuthorizationGroupAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupResponse> GetADPrincipalAuthorizationGroupAsync(string Server, string PartitionDN, string PrincipalDN) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADPrincipalAuthorizationGroupRequest();
            inValue.Server = Server;
            inValue.PartitionDN = PartitionDN;
            inValue.PrincipalDN = PrincipalDN;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).GetADPrincipalAuthorizationGroupAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.TranslateName(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameRequest request) {
            return base.Channel.TranslateName(request);
        }
        
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameTranslateResult[] TranslateName(string Server, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameFormat FormatDesired, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameFormat FormatOffered, string[] Names) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameRequest();
            inValue.Server = Server;
            inValue.FormatDesired = FormatDesired;
            inValue.FormatOffered = FormatOffered;
            inValue.Names = Names;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).TranslateName(inValue);
            return retVal.NameTranslateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement.TranslateNameAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameRequest request) {
            return base.Channel.TranslateNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameResponse> TranslateNameAsync(string Server, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameFormat FormatDesired, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryNameFormat FormatOffered, string[] Names) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TranslateNameRequest();
            inValue.Server = Server;
            inValue.FormatDesired = FormatDesired;
            inValue.FormatOffered = FormatOffered;
            inValue.Names = Names;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.AccountManagement)(this)).TranslateNameAsync(inValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", ConfigurationName="ActiveDirectory.Service.TopologyManagement", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface TopologyManagement {
        
        // CODEGEN: Generating message contract since the wrapper name (GetADDomainControllerRequest) of message GetADDomainControllerRequest does not match the default value (GetADDomainController)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADDomainController", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADDomainControllerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="GetADDomainControllerFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerResponse GetADDomainController(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADDomainController", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADDomainControllerResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerResponse> GetADDomainControllerAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetADDomainRequest) of message GetADDomainRequest does not match the default value (GetADDomain)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADDomain", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADDomainResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="GetADDomainFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainResponse GetADDomain(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADDomain", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADDomainResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainResponse> GetADDomainAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (MoveADOperationMasterRoleRequest) of message MoveADOperationMasterRoleRequest does not match the default value (MoveADOperationMasterRole)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/MoveADOperationMasterRole", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/MoveADOperationMasterRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="MoveADOperationMasterRoleFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleResponse MoveADOperationMasterRole(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/MoveADOperationMasterRole", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/MoveADOperationMasterRoleResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleResponse> MoveADOperationMasterRoleAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetADForestRequest) of message GetADForestRequest does not match the default value (GetADForest)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADForest", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADForestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="GetADForestFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestResponse GetADForest(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADForest", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetADForestResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestResponse> GetADForestAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (ChangeOptionalFeatureRequest) of message ChangeOptionalFeatureRequest does not match the default value (ChangeOptionalFeature)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/ChangeOptionalFeature", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/ChangeOptionalFeatureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="ChangeOptionalFeatureFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureResponse ChangeOptionalFeature(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/ChangeOptionalFeature", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/ChangeOptionalFeatureResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureResponse> ChangeOptionalFeatureAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetVersion", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionFault), Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/Data/fault", Name="GetVersionFault")]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionResponse GetVersion(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetVersion", ReplyAction="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions/TopologyManagem" +
            "ent/GetVersionResponse")]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionResponse> GetVersionAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADDomainControllerRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADDomainControllerRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public string[] NtdsSettingsDN;
        
        public GetADDomainControllerRequest() {
        }
        
        public GetADDomainControllerRequest(string Server, string[] NtdsSettingsDN) {
            this.Server = Server;
            this.NtdsSettingsDN = NtdsSettingsDN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADDomainControllerResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADDomainControllerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDomainController[] DomainControllers;
        
        public GetADDomainControllerResponse() {
        }
        
        public GetADDomainControllerResponse(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDomainController[] DomainControllers) {
            this.DomainControllers = DomainControllers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADDomainRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADDomainRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        public GetADDomainRequest() {
        }
        
        public GetADDomainRequest(string Server) {
            this.Server = Server;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADDomainResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADDomainResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDomain Domain;
        
        public GetADDomainResponse() {
        }
        
        public GetADDomainResponse(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDomain Domain) {
            this.Domain = Domain;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveADOperationMasterRoleRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class MoveADOperationMasterRoleRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryOperationMasterRole OperationMasterRole;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=1)]
        public bool Seize;
        
        public MoveADOperationMasterRoleRequest() {
        }
        
        public MoveADOperationMasterRoleRequest(string Server, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryOperationMasterRole OperationMasterRole, bool Seize) {
            this.Server = Server;
            this.OperationMasterRole = OperationMasterRole;
            this.Seize = Seize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveADOperationMasterRoleResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class MoveADOperationMasterRoleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public bool WasSeized;
        
        public MoveADOperationMasterRoleResponse() {
        }
        
        public MoveADOperationMasterRoleResponse(bool WasSeized) {
            this.WasSeized = WasSeized;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADForestRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADForestRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        public GetADForestRequest() {
        }
        
        public GetADForestRequest(string Server) {
            this.Server = Server;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetADForestResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetADForestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryForest Forest;
        
        public GetADForestResponse() {
        }
        
        public GetADForestResponse(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryForest Forest) {
            this.Forest = Forest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOptionalFeatureRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class ChangeOptionalFeatureRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions")]
        public string Server;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public string DistinguishedName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=1)]
        public bool Enable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=2)]
        public System.Guid FeatureId;
        
        public ChangeOptionalFeatureRequest() {
        }
        
        public ChangeOptionalFeatureRequest(string Server, string DistinguishedName, bool Enable, System.Guid FeatureId) {
            this.Server = Server;
            this.DistinguishedName = DistinguishedName;
            this.Enable = Enable;
            this.FeatureId = FeatureId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeOptionalFeatureResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class ChangeOptionalFeatureResponse {
        
        public ChangeOptionalFeatureResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersionRequest", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetVersionRequest {
        
        public GetVersionRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersionResponse", WrapperNamespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", IsWrapped=true)]
    public partial class GetVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=0)]
        public int VersionMajor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=1)]
        public int VersionMinor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2008/1/ActiveDirectory/CustomActions", Order=2)]
        public string VersionString;
        
        public GetVersionResponse() {
        }
        
        public GetVersionResponse(int VersionMajor, int VersionMinor, string VersionString) {
            this.VersionMajor = VersionMajor;
            this.VersionMinor = VersionMinor;
            this.VersionString = VersionString;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TopologyManagementChannel : BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TopologyManagementClient : System.ServiceModel.ClientBase<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement>, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement {
        
        public TopologyManagementClient() {
        }
        
        public TopologyManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TopologyManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TopologyManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TopologyManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.GetADDomainController(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerRequest request) {
            return base.Channel.GetADDomainController(request);
        }
        
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDomainController[] GetADDomainController(string Server, string[] NtdsSettingsDN) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerRequest();
            inValue.Server = Server;
            inValue.NtdsSettingsDN = NtdsSettingsDN;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).GetADDomainController(inValue);
            return retVal.DomainControllers;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.GetADDomainControllerAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerRequest request) {
            return base.Channel.GetADDomainControllerAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerResponse> GetADDomainControllerAsync(string Server, string[] NtdsSettingsDN) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainControllerRequest();
            inValue.Server = Server;
            inValue.NtdsSettingsDN = NtdsSettingsDN;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).GetADDomainControllerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.GetADDomain(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainRequest request) {
            return base.Channel.GetADDomain(request);
        }
        
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryDomain GetADDomain(string Server) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainRequest();
            inValue.Server = Server;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).GetADDomain(inValue);
            return retVal.Domain;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.GetADDomainAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainRequest request) {
            return base.Channel.GetADDomainAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainResponse> GetADDomainAsync(string Server) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADDomainRequest();
            inValue.Server = Server;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).GetADDomainAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.MoveADOperationMasterRole(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleRequest request) {
            return base.Channel.MoveADOperationMasterRole(request);
        }
        
        public bool MoveADOperationMasterRole(string Server, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryOperationMasterRole OperationMasterRole, bool Seize) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleRequest();
            inValue.Server = Server;
            inValue.OperationMasterRole = OperationMasterRole;
            inValue.Seize = Seize;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).MoveADOperationMasterRole(inValue);
            return retVal.WasSeized;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.MoveADOperationMasterRoleAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleRequest request) {
            return base.Channel.MoveADOperationMasterRoleAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleResponse> MoveADOperationMasterRoleAsync(string Server, BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryOperationMasterRole OperationMasterRole, bool Seize) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.MoveADOperationMasterRoleRequest();
            inValue.Server = Server;
            inValue.OperationMasterRole = OperationMasterRole;
            inValue.Seize = Seize;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).MoveADOperationMasterRoleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.GetADForest(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestRequest request) {
            return base.Channel.GetADForest(request);
        }
        
        public BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ActiveDirectoryForest GetADForest(string Server) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestRequest();
            inValue.Server = Server;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).GetADForest(inValue);
            return retVal.Forest;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.GetADForestAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestRequest request) {
            return base.Channel.GetADForestAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestResponse> GetADForestAsync(string Server) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetADForestRequest();
            inValue.Server = Server;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).GetADForestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.ChangeOptionalFeature(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureRequest request) {
            return base.Channel.ChangeOptionalFeature(request);
        }
        
        public void ChangeOptionalFeature(string Server, string DistinguishedName, bool Enable, System.Guid FeatureId) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureRequest();
            inValue.Server = Server;
            inValue.DistinguishedName = DistinguishedName;
            inValue.Enable = Enable;
            inValue.FeatureId = FeatureId;
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).ChangeOptionalFeature(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureResponse> BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.ChangeOptionalFeatureAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureRequest request) {
            return base.Channel.ChangeOptionalFeatureAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureResponse> ChangeOptionalFeatureAsync(string Server, string DistinguishedName, bool Enable, System.Guid FeatureId) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.ChangeOptionalFeatureRequest();
            inValue.Server = Server;
            inValue.DistinguishedName = DistinguishedName;
            inValue.Enable = Enable;
            inValue.FeatureId = FeatureId;
            return ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).ChangeOptionalFeatureAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionResponse BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement.GetVersion(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionRequest request) {
            return base.Channel.GetVersion(request);
        }
        
        public int GetVersion(out int VersionMinor, out string VersionString) {
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionRequest inValue = new BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionRequest();
            BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionResponse retVal = ((BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.TopologyManagement)(this)).GetVersion(inValue);
            VersionMinor = retVal.VersionMinor;
            VersionString = retVal.VersionString;
            return retVal.VersionMajor;
        }
        
        public System.Threading.Tasks.Task<BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionResponse> GetVersionAsync(BCH.Comex.Core.BL.Portal.ActiveDirectory.Service.GetVersionRequest request) {
            return base.Channel.GetVersionAsync(request);
        }
    }
}
