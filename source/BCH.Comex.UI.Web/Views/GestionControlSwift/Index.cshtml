@model BCH.Comex.UI.Web.Models.GestionControlSwift.Index
@{
    ViewBag.Title = "Gestión y Control Swift";
    ViewBag.Favicon = @Url.Content("~/Content/img/apps/gestion-y-control-inv.png");
}

@section css{
    <style>
        .clickable {
            cursor: pointer;
        }

            .clickable .glyphicon {
                background: rgba(0, 0, 0, 0.15);
                display: inline-block;
                padding: 6px 12px;
                border-radius: 4px;
            }

        .panel-heading span {
            margin-top: -23px;
            font-size: 15px;
            margin-right: -9px;
        }

        a.clickable {
            color: inherit;
        }

            a.clickable:hover {
                text-decoration: none;
            }
    </style>
}
<div id="msg-zone">

</div>
<nav class="navbar navbar-default navbar-static-top">
    <ul class="nav nav-tabs">
        <li role="presentation" class="dropdown">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                <b>Opciones</b><span class="caret"></span>
            </a>
            <ul class="dropdown-menu">
                <li><a href="@Url.Action("ControlEnvioMensajeriaSwift")">Control de Envío</a></li>
                <li><a href="@Url.Action("ControlSwift")">Control de Recepción</a></li>
                <li><a href="@Url.Action("Index")">Gestión Mensajes Recibidos</a></li>
                <li><a href="@Url.Action("GestionEnviados")">Gestión Mensajes Enviados</a></li>
                <li><a href="@Url.Action("EstadisticaEnviarRecibir")">Estadísticas Enviar/Recibir</a></li>
            </ul>
        </li>
        <li role="presentation" class="dropdown">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                <b>Encasillamiento</b><span class="caret"></span>
            </a>
            <ul class="dropdown-menu">
                <li><a href="@Url.Action("EncasillamientoManualSwift")">Encasillamiento Manual</a></li>
                <li><a href="@Url.Action("EncasillamientoAutomaticoSwift")">Encasillamiento Automático</a></li>
            </ul>
        </li>
    </ul>
</nav>

<div class="row">
    <div class="col-md-10 col-md-offset-1">
        <h2>
            Gestión y Control Swift
        </h2>
    </div>
</div>
<div class="row">
    <div class="col-md-10 col-md-offset-1">
        <div class="panel panel-primary">
            <div class="panel-heading clickable">
                <h2 class="panel-title">Filtros</h2>
                <span class="pull-right clickable"><i class="glyphicon glyphicon-minus"></i></span>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("BuscarSwifts", "ConsultaSwift"))
                {
                    <div class="container">
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.Label("Casilla", "Casilla", new { @class = "control-label col-xs-2" })
                                <div class="col-xs-5">
                                    <div class="input-group">
                                        @Html.DropDownList("idCasilla", Model.CasillasVisibles, "-- Todas las Casillas --", new { @class = "selectpicker form-control", data_live_search = "true" })
                                        <span class="input-group-btn">
                                            <button id="btnConfigurarCasillas" class="btn btn-default" type="button" data-toggle="modal" data-backdrop="false" title="Configure las casillas que desea ver en esta lista" data-target="#modalAdminCasillas">
                                                <span class="glyphicon glyphicon-cog" aria-hidden="true"></span>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                <label class="control-label has-error" style="display:none" id="lblErrorCasilla">La casilla es requerida</label>
                            </div>
                            <div class="form-group">
                                @Html.Label("dtpFechaDesde", "Fecha", new { id = "lblFechaDesde", @class = "control-label  col-xs-2" })
                                <div class="col-xs-3">
                                    <div class="input-group date" id="dtpFechaDesde">
                                        <input type="text" class="form-control" id="txtFechaDesde" />
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox" id="chkPeriodoFechas"> Período
                                        </label>
                                    </div>
                                </div>
                                <label class="control-label has-error" style="display:none" id="lblErrorFechaDesde">La fecha debe ser menor o igual a la fecha del día</label>
                            </div>
                            <div class="form-group" id="grpFechaHasta">
                                @Html.Label("dtpFechaHasta", "Hasta", new { @class = "control-label col-xs-2" })
                                <div class="col-xs-3">
                                    <div class="input-group date" id="dtpFechaHasta">
                                        <input type="text" class="form-control" id="txtFechaHasta" />
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                                <label class="control-label has-error" style="display:none" id="lblErrorFechaHasta">La fecha debe ser menor o igual a la fecha desde</label>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-xs-10">
                                    <div class="btn-group">
                                        <button type="button" id="btnBuscar" class="btn btn-primary"><span class="glyphicon glyphicon-search" aria-hidden="true"></span>&nbsp;&nbsp;Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @{ Html.RenderPartial("_AdminCasillas"); }
            </div>

        </div>
    </div>
</div>
<div class="row">
    <div id="alertPlaceholder"></div>
</div>

<div class="row">
    <div class="panel panel-default" id="pnlResultados">
        <div class="panel-heading">
            <h2 class="panel-title">Resultados</h2>
        </div>
        <div class="panel-body">
            <table id="tablaSwifts"></table>
        </div>
    </div>
</div>

<div id="custom-toolbar" hidden>
    <div class="form-inline" role="form" id="toolbarResultados">
        <div class="form-group">
            <label for="selectFiltroEstado">Estado</label>
            <select class="form-control" id="selectFiltroEstado" name="selectFiltroEstado">
                <option value="0">Todos</option>
                <option value="SEN">Sin Encasillar</option>
                <option value="IMP">Impresos</option>
                <option value="REC">Rechazados</option>
                <option value="PDU">Posibles Duplicados</option>
                <option value="ENC">Encasillados</option>
                <option value="CNF">Confirmados</option>
                <option value="REE">Reenviados</option>
            </select>
        </div>
        <div class="form-group" id="BtnReporte">
            <button class="btn btn-info" id="btnReporte" style="vertical-align:baseline">Reporte</button>
        </div>
        <div class="form-group " id="grupoBotoneEsportar">
            <button class="btn btn-default" id="btnExportar" style="vertical-align:baseline">Exportar</button>
        </div>
        <div class="form-group" id="grupoBotonesEncasilla">
            <button class="btn btn-info" id="btnVerDatos" style="vertical-align:baseline">Ver Datos</button>
            <button class="btn btn-info" id="btnVerLog" style="vertical-align:baseline">Ver Log</button>
            <button class="btn btn-info" id="btnVisualizar" style="vertical-align:baseline">Visualizar</button>
        </div>
    </div>

</div>

<div id="modalAutorizarSwift" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="Autorización de mensaje Swift">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="modalTitle">Autorizar Swift</h4>
                <label class="control-label" id="NroMensaje">N° Mensaje: </label>
                <label class="label-success" id="lblMensaje"></label>
                <label class="control-label" id="Tipo">Tipo: </label>
                <label class="label-success" id="lblTipo"></label>
                <label class="control-label" id="Moneda">Moneda: </label>
                <label class="label-success" id="lblMoneda"></label>
                <label class="control-label" id="Monto">Monto: </label>
                <label class="label-success" id="lblMonto"></label>

            </div>
            <div class="modal-body" id="divAutorizaSwift">
            </div>
        </div>
    </div>
</div>

<div id="modalVisorIndividualSwift" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="Visor individual de mensaje Swift">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body text-center" id="divCuerpoSwift"></div>
            <div class="modal-footer">
                <button class="btn" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div id="modalVisorSwift" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="Visor individual de mensaje Swift">
    <div class="modal-dialog modal-lg xlg">
        <div class="modal-content">
            <div id="divCuerpoMensajeSwift"></div>
        </div>
    </div>
</div>

<div id="modalLogSwift" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="Visor individual de mensaje Swift">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body text-center" id="divLogSwift"></div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/JQueryfileDownload")
    <script type="text/javascript" src="~/Scripts/bootstrap-table/bootstrap-table-multiple-sort.js"></script>
    <script type="text/javascript">

    $(document).on('click', '.panel-heading span.clickable', function (e) {
        var $this = $(this);
        if (!$this.hasClass('panel-collapsed')) {
            $this.parents('.panel').find('.panel-body').slideUp();
            $this.addClass('panel-collapsed');
            $this.find('i').removeClass('glyphicon-minus').addClass('glyphicon-plus');
        } else {
            $this.parents('.panel').find('.panel-body').slideDown();
            $this.removeClass('panel-collapsed');
            $this.find('i').removeClass('glyphicon-plus').addClass('glyphicon-minus');
        }
    });

    $(document).on('click', '.panel div.clickable', function (e) {
        var $this = $(this);
        if (!$this.hasClass('panel-collapsed')) {
            $this.parents('.panel').find('.panel-body').slideUp();
            $this.addClass('panel-collapsed');
            $this.find('i').removeClass('glyphicon-minus').addClass('glyphicon-plus');
        } else {
            $this.parents('.panel').find('.panel-body').slideDown();
            $this.removeClass('panel-collapsed');
            $this.find('i').removeClass('glyphicon-plus').addClass('glyphicon-minus');
        }
    });

    var ultimosParamsConsultaSwift = null;

    $(document).ready(function () {
        $.fx.off = true;
        var formatoPOST = "DD/MM/YYYY";
        var formatoGET = "YYYY/MM/DD";
        $('#pnlResultados').hide();
        $('#grpFechaHasta').hide();
        $('#formFiltroEstado').hide();

        var rowSelected;
        var configColumnas = [{
            radio: true
        },
        {
            field: 'Sesion',
            title: 'Sesión',
            sortable: true,
            visible: true
        },
        {
            field: 'Secuencia',
            title: 'Secuencia',
            sortable: true,
            visible: true
        },
        {
            field: 'NombreCasilla',
            title: 'Nombre Casilla',
            sortable: true,
            visible: false
        },
        {
            field: 'Tipo',
            title: 'Tipo',
            sortable: true,
            visible: true
        },
        {
            field: 'TipoNombre',
            title: 'Tipo Nombre',
            sortable: true,
            visible: false
        },
        {
            field: 'Prioridad',
            title: 'Prioridad',
            sortable: true,
            visible: true
        },
        {
            field: 'Estado',
            title: 'Estado',
            visible: true,
            sortable: true,
        },
        {
            field: 'Casilla',
            title: 'Casilla',
            sortable: true,
            visible: true
        },
        {
            field: 'FechaRecepcion',
            title: 'Fecha Recepción',
            sortable: true,
            visible: true
        },
        {
            field: 'fecha1',
            title: 'fecha1',
            sortable: true,
            visible: false
        },
        {
            field: 'fecha2',
            title: 'fecha2',
            sortable: true,
            visible: false
        },
        {
            field: 'cod_banco_rec',
            title: 'Codigó Banco Rec.',
            sortable: true,
            visible: false
        },
        {
            field: 'branch_rec',
            title: 'Branch Rec.',
            sortable: true,
            visible: false
        },
        {
            field: 'BancoEmisor',
            title: 'Banco Emisor',
            sortable: true,
        },
        {
            field: 'cod_banco_em',
            title: 'Codigó Banco Em.',
            sortable: true,
            visible: false
        },
        {
            field: 'branch_em',
            title: 'Branch Em.',
            sortable: true,
            visible: false
        },
        {
            field: 'NombreBanco',
            title: 'Nombre Banco',
            sortable: true,
            visible: false
        },
        {
            field: 'CiudadBanco',
            title: 'Ciudad Banco',
            sortable: true,
            visible: false
        },
        {
            field: 'PaisBanco',
            title: 'Pais Banco',
            sortable: true,
            visible: false
        },
        {
            field: 'OficinaBanco',
            title: 'Oficina Banco',
            sortable: true,
            visible: false
        },
        {
            field: 'Moneda',
            title: 'Mnda',
            sortable: true
        },
        {
            field: 'Monto',
            title: 'Monto',
            sortable: true,
            align: "right",
            formatter: montoFormatter
        },
        {
            field: 'Referencia',
            title: 'Referencia',
            sortable: true,
            align: 'right',
            formatter: referenciaFormatter
        },
        {
            field: 'Beneficiario',
            title: 'Beneficiario',
            sortable: true,
            visible: true
        },
        {
            field: 'NumeroImpresion',
            title: 'Num Impresión',
            sortable: true,
            visible: true
        },
        {
            field: 'Comentario',
            title: 'Comentario',
            sortable: true,
            visible: true
        },
        ];

        $('#grpFechaHasta').hide();

        var initialDate = moment(new Date()).utc().startOf('day');
        var finalDate = moment(new Date()).utc().endOf('day');

        $('#dtpFechaDesde').datetimepicker({ format: 'DD/MM/YYYY', locale: 'es', defaultDate: initialDate, maxDate: finalDate, debug: true });
        $('#dtpFechaHasta').datetimepicker({ format: 'DD/MM/YYYY', locale: 'es', defaultDate: initialDate, maxDate: finalDate, debug: true });

        $('#grpFechaHasta').hide();
        $("#dtpFechaDesde").on("dp.change", function (e) {

            $('#dtpFechaHasta').data("DateTimePicker").minDate(false);
            $('#dtpFechaHasta').data("DateTimePicker").maxDate(false);
            $('#dtpFechaHasta').data("DateTimePicker").minDate(e.date);

            var fecha6Meses = moment(e.date).add(6, 'months');
            if (fecha6Meses < finalDate) {
                $('#dtpFechaHasta').data("DateTimePicker").maxDate(fecha6Meses);
            }
            else {
                $('#dtpFechaHasta').data("DateTimePicker").maxDate(finalDate);
            }
        });

        $('#chkPeriodoFechas').change(function () {
            $('#grpFechaHasta').toggle();
            if ($(this).is(':checked')) {
                $('#lblFechaDesde').text("Desde");
                $('#dtpFechaHasta').data("DateTimePicker").show();
            }
            else {
                $('#lblFechaDesde').text("Fecha");
                $('#dtpFechaHasta').data("DateTimePicker").hide();
            }
        });

        //(moo 2015-08-24) Evento de seleccion de Fila
        $('#tablaSwifts').on('check.bs.table', function (e, row) {
            rowSelected = row;
        });

        function accionVerTableFormatter(value, row, index) {
            return "<i class='glyphicon glyphicon-th-list'></i>";
        }

        function accionVisTableFormatter(value, row, index) {
            return "<i class='glyphicon glyphicon-file'></i>";
        }

        function montoFormatter(value, row, index) {
            if ((row["Moneda"] == 'CLP') || (row["Moneda"] == '')) {
                return numeral(value).format("0,0");
            } else {
                return numeral(value).format("0,0.00");
            }
        }

        function referenciaFormatter(value, row, index) {
            if (!isNaN(value) && value != '') {
                return '\'' + value;
            } else {
                return value;
            }
        }

        var buscarTodos = function () {
            var url = '@Url.Action("GetTodos")';
            var idCasilla = 0;
            var seleccion = "todos";

            // Limpiamos errores
            $('#dtpFechaDesde').closest(".form-group").removeClass("has-error");
            $('#dtpFechaHasta').closest(".form-group").removeClass("has-error");
            $('#lblErrorFechaDesde').hide();
            $('#lblErrorFechaHasta').hide();

            var fechaDesde = $('#dtpFechaDesde').data("DateTimePicker").date();
            // si la fecha desde esta en blanco, dtpFechaDesde devuelve null
            if (fechaDesde == null) {
                $('#dtpFechaDesde').closest(".form-group").addClass("has-error");
                $('#lblErrorFechaDesde').show();
                $('#txtFechaDesde').focus();
                return;
            }

            var fechaHasta;
            if ($("#chkPeriodoFechas").is(":checked")) {
                fechaHasta = $('#dtpFechaHasta').data("DateTimePicker").date();
            }
            else {
                fechaHasta = fechaDesde;
            }

            // si la fecha hasta esta en blanco, dtpFechaHasta devuelve null
            if (fechaHasta == null) {
                $('#dtpFechaHasta').closest(".form-group").addClass("has-error");
                $('#lblErrorFechaHasta').show();
                $('#txtFechaHasta').focus();
                return;
            }

            $('#alertdiv0').hide();
            $('#pnlResultados').show();
            $('#tablaSwifts').bootstrapTable('destroy');
            $('#tablaSwifts').bootstrapTable({
                classes: 'table',
                height: 550,
                url: url,
                queryParams: function (p) {
                    return {
                        idCasilla: idCasilla,
                        fechaDesde: fechaDesde.format("YYYY/MM/DD"),
                        fechaHasta: fechaHasta.format("YYYY/MM/DD")
                    };
                },
                locale: "es-SP",
                sidePagination: 'client',
                columns: configColumnas,
                searchAlign: 'left',
                showRefresh: true,
                clickToSelect: true,
                search: true,
                checkboxHeader: false,
                toolbar: '#custom-toolbar',
                striped: true,
                pagination: true,
                pageSize: 20,
                pageList: [10, 20, 50],
                showExport: false,
                exportDataType: 'all',
                exportOptions: {
                    fileName: 'Gestión y Control Swift Todos- @DateTime.Now.ToString("ddMMyyyy_hhmmss")',
                    worksheetName: ['GestionControlSwift'],
                    tableName: 'GestionControlSwift',
                    ignoreColumn: [0]
                },
                exportHiddenColumns: [
                    'NombreCasilla',
                    'TipoNombre',
                    'fecha1',
                    'fecha2',
                    'cod_banco_rec',
                    'branch_rec',
                    'cod_banco_em',
                    'branch_em',
                    'NombreBanco',
                    'CiudadBanco',
                    'PaisBanco',
                    'OficinaBanco'
                ],
                showMultiSort: true
            });

            $('.panel div.clickable').click();

            // cada vez que busco, se resetea los niveles de ordenamiento
            var current = $("#sortModal_tablaSwifts").find('tbody tr').length;
            while (current > 1) {
                current--;
                $("#sortModal_tablaSwifts").find('tbody tr:last').remove();
            }

            if ($('#tablaSwifts').bootstrapTable('getOptions').showMultiSort) {
                // Evitar doble cabecera del multiple ordenamiento.
                $("#sortModal_tablaSwifts").find('.btn-primary').click();
            }

            // Se oculta boton de exportación
            $(".export").css("display", "none");
        };
        

        var buscar = function () {
            $("#custom-toolbar").show();

            seleccion = "todos";
            actionButonHidden();
            actionButonVisible();
            var url = '@Url.Action("GetTodos")';
            var idCasilla = $('#idCasilla').val()||0;
            var _codEstado = $('#selectFiltroEstado').val();

            // Limpiamos errores
            $('#dtpFechaDesde').closest(".form-group").removeClass("has-error");
            $('#dtpFechaHasta').closest(".form-group").removeClass("has-error");
            $('#lblErrorFechaDesde').hide();
            $('#lblErrorFechaHasta').hide();

            var fechaDesde = $('#dtpFechaDesde').data("DateTimePicker").date();
            // si la fecha desde esta en blanco, dtpFechaDesde devuelve null
            if (fechaDesde == null) {
                $('#dtpFechaDesde').closest(".form-group").addClass("has-error");
                $('#lblErrorFechaDesde').show();
                $('#txtFechaDesde').focus();
                return;
            }

            var fechaHasta;
            if ($("#chkPeriodoFechas").is(":checked")) {
                fechaHasta = $('#dtpFechaHasta').data("DateTimePicker").date();
            }
            else {
                fechaHasta = fechaDesde;
            }

            // si la fecha hasta esta en blanco, dtpFechaHasta devuelve null
            if (fechaHasta == null) {
                $('#dtpFechaHasta').closest(".form-group").addClass("has-error");
                $('#lblErrorFechaHasta').show();
                $('#txtFechaHasta').focus();
                return;
            }
            $('#alertdiv0').hide();
            $('#pnlResultados').show();
            $('#tablaSwifts').bootstrapTable('destroy');
            $('#tablaSwifts').bootstrapTable({
                classes: 'table',
                url: url,
                height: 550,
                queryParams: function GetParamsParaBusquedaSwift(p) {
                    ultimosParamsConsultaSwift = {
                        idCasilla: idCasilla,
                        fechaDesde: fechaDesde.format("YYYY/MM/DD"),
                        fechaHasta: fechaHasta.format("YYYY/MM/DD"),
                        _codEstado: _codEstado
                    };
                    return ultimosParamsConsultaSwift;
                },
                locale: "es-SP",
                sidePagination: 'client',
                columns: configColumnas,
                searchAlign: 'left',
                showRefresh: true,
                clickToSelect: true,
                search: true,
                checkboxHeader: false,
                toolbar: '#custom-toolbar',
                striped: true,
                pagination: true,
                pageSize: 25,
                pageList: [10, 25, 50, 100, 200],
                showExport: true,
                exportTypes: ['excel'],
                exportDataType: 'all',
                exportOptions: {
                    fileName: 'Gestión y Control Swift - @DateTime.Now.ToString("ddMMyyyy_hhmmss")',
                    worksheetName: ['GestionControlSwift'],
                    tableName: 'GestionControlSwift',
                    ignoreColumn: [0]
                },
                exportHiddenColumns: [
                    'NombreCasilla',
                    'TipoNombre',
                    'fecha1',
                    'fecha2',
                    'cod_banco_rec',
                    'branch_rec',
                    'cod_banco_em',
                    'branch_em',
                    'NombreBanco',
                    'CiudadBanco',
                    'PaisBanco',
                    'OficinaBanco'
                ],
                onLoadError: function (arg1, arg2, arg3) {
                    if (arg1 == "500") {
                        showAlert("Error", "Debe elegir un rango que contenga menos registros.", "alert-danger");
                    }
                },
                showMultiSort: true
            });

            $('.panel div.clickable').click();

            // cada vez que busco, se resetea los niveles de ordenamiento
            var current = $("#sortModal_tablaSwifts").find('tbody tr').length;
            while (current > 1) {
                current--;
                $("#sortModal_tablaSwifts").find('tbody tr:last').remove();
            }

            if ($('#tablaSwifts').bootstrapTable('getOptions').showMultiSort) {
                // Evitar doble cabecera del multiple ordenamiento.
                $("#sortModal_tablaSwifts").find('.btn-primary').click();
            }

            // Se oculta boton de exportación
            $(".export").css("display", "none");

        };

        var exportar = function () {
            $.blockUI({ message: '<h6>Descargando...</h6>' });
            // exporta en excel
            setTimeout(function () { $('li[data-type="excel"] a').click(); $.unblockUI();}, 500);
        };

        buscarTodos();

        var ReporteEncAut = function () {
            var urlReporteEncAutSwift = '@Url.Action("ReporteGestionControlSwift", "GestionControlSwift")';
            var p = ultimosParamsConsultaSwift;
            if (p != null) {
                //tener en cuenta que al hacer un GET, las fechas .NET las toma en invariant culture, a diferencia de un POST donde las toma con la current culture
                var urlReporte = urlReporteEncAutSwift + "?idCasilla=" + p['idCasilla'] +
                    "&fechaDesde=" + encodeURIComponent(moment(p['fechaDesde'], formatoGET).format(formatoGET)) +
                    "&fechaHasta=" + encodeURIComponent(moment(p['fechaHasta'], formatoGET).format(formatoGET)) +
                    "&_codEstado=" + $('#selectFiltroEstado').val();

                var w = window.open(urlReporte, "_blank");
                return true;
            }
        };

        var verMensaje = function () {
            if (rowSelected != null) {
                if (rowSelected["Sesion"] != null || rowSelected["Secuencia"] != null) {

                    var sesion = rowSelected["Sesion"];
                    var secuencia = rowSelected["Secuencia"];

                    $.get('@Url.Action("DatosSwiftRecibido", "ConsultaSwift")', { sesion: sesion, secuencia: secuencia }, function (data) {
                        $('#divCuerpoMensajeSwift').html(data);
                        $('#modalVisorSwift').modal();
                    });
                }
            }
        };

        var verLog = function () {
            if (rowSelected != null) {
                if (rowSelected["Sesion"] != null || rowSelected["Secuencia"] != null) {

                    var sesion = rowSelected["Sesion"];
                    var secuencia = rowSelected["Secuencia"];

                    $.get('@Url.Action("LogSwiftRecibido", "GestionControlSwift")', { sesion: sesion, secuencia: secuencia }, function (data) {
                        $('#divLogSwift').html(data);
                        $('#modalLogSwift').modal();
                    });
                }
            }
        };

        var visualizar = function () {
            if (rowSelected != null) {
                if (rowSelected["Sesion"] != null || rowSelected["Secuencia"] != null) {

                    var sesion = rowSelected["Sesion"];
                    var secuencia = rowSelected["Secuencia"];

                    $.get('@Url.Action("DetalleSwift", "ConsultaSwift")', { sesion: sesion, secuencia: secuencia, visualizacion: true }, function (data) {
                        $('#divCuerpoSwift').html(data);
                        $('#modalVisorIndividualSwift').modal();
                    });
                }
            }
        };

        //(moo 2015-08-24) Funcion visualiza información del Mensaje.
        var visualizarMensaje = function (row) {

            var inSession = row["Sesion"];
            var inSecuencia = row["Secuencia"];

            $.get('@Url.Action("DetalleSwift", "ConsultaSwift")', { sesion: inSession, secuencia: inSecuencia }, function (data) {
                $('#divCuerpoSwift').html(data);
                $('#modalVisorIndividualSwift').modal();
            });
        };

        //(moo 2015-08-24) eventos click
        $('#btnBuscar').click(buscar);
        $('#btnExportar').click(exportar);

        //(moo 2015-08-24) detectamos seleccion del filtro de mensajes
        $('#selectFiltroEstado').change(function () {
            var filtro = $('#selectFiltroEstado').val();

            if (filtro == '0') {
                $('#tablaSwifts').bootstrapTable('filterBy', {});
            } else {
                $('#tablaSwifts').bootstrapTable('filterBy', { Estado: filtro });
            }
        });

        $('#btnVerDatos').click(verMensaje);
        $('#btnVerLog').click(verLog);
        $('#btnVisualizar').click(visualizar);
        $('#btnReporte').click(ReporteEncAut);
        $('#tablaSwifts').on('check.bs.table', function (e, row) {
            rowSelected = row;
        });

        //Guardar casilla
        var urlGuardarCasillas = '@Url.Action("GuardarCasillas")';
        var actualizarDropDownCasillasSegunConfigurado = function () {
            var dropDown = $('#idCasilla');
            dropDown.find('option').remove().end().append('<option value="">-- Todas las Casillas --</option>');

            $('input[name=chkCasillaVisible]:checked').each(function () {
                var strSelected = "";
                if ($('input[name=radCasillaPrincipal][value=' + $(this).val() + ']').is(':checked')) {
                    strSelected = " selected";
                }
                dropDown.append("<option value='" + $(this).val() + "'" + strSelected + ">" + $(this).closest("td").siblings('#trNombreCasilla').eq(0).text() + "</option>");
            });

        }
        var guardarCasillas = function () {
            var casillasSeleccionadas = [];
            $('input[name=chkCasillaVisible]:checked').each(function () {
                casillasSeleccionadas.push($(this).val());
            });

            var valorCasillaDefault = "";
            var selected = $("input[type='radio'][name='radCasillaPrincipal']:checked");
            if (selected.length > 0) {
                valorCasillaDefault = selected.val();
            }

            var parametros = { idsCasillasVisibles: casillasSeleccionadas, idCasillaDefault: valorCasillaDefault };

            $.ajax({
                type: "POST",
                url: urlGuardarCasillas,
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(parametros),
                dataType: "json",
                success: function () {
                    $('#modalAdminCasillas').modal('hide');
                    showAlert("Operación exitosa!", "Las casillas se guardaron satisfactoriamente.", "alert-success");
                    actualizarDropDownCasillasSegunConfigurado();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $('#modalAdminCasillas').modal('hide');
                    showAlert("Error en la operación", "Los cambios no se pudieron guardar.", "alert-danger");
                }
            });
            return false;
        };
        $('#btnGuardarCasillas').click(function () {
            guardarCasillas();
        });

        $('#dtpFechaDesde').on("dp.show", function (e) {
            $('#dtpFechaHasta').data('DateTimePicker').hide();
        });

        $('#dtpFechaHasta').on("dp.show", function (e) {
            $('#dtpFechaDesde').data('DateTimePicker').hide();
        });

        function montoFormatter(value, row, index) {
            if ((row["Moneda"] == 'CLP') || (row["Moneda"] == '')) {
                return numeral(value).format("0,0");
            } else {
                return numeral(value).format("0,0.00");
            }
        }

        $('#tablaSwifts').on('check.bs.table', function (e, row) {
            rowSelected = row;
            $("#btnVerDatos").attr("disabled", true);
            $("#btnLog").attr("disabled", true);
            $("#btnVisualizar").attr("disabled", true);

            if (seleccion == "todos") {
                $("#btnReporte").attr("disabled", false);
                $("#btnExportar").attr("disabled", false);
                $("#btnVerDatos").attr("disabled", false);
                $("#btnVerLog").attr("disabled", false);
                $("#btnVisualizar").attr("disabled", false);
            }

        });

        function actionButonVisible() {
            $('#btnVerDatos').show();
            $('#btnVerLog').show();
            $('#btnVisualizar').show();
        }

        function actionButonHidden() {
            $('#btnVerDatos').hide();
            $("#btnVerDatos").attr("disabled", true);
            $('#btnVerLog').hide();
            $("#btnVerLog").attr("disabled", true);
            $('#btnVisualizar').hide();
            $("#btnVisualizar").attr("disabled", true);

        }
    });
    </script>
}